{"version":3,"file":"js/525.ed32850a.js","mappings":"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","sources":["webpack://vue-cli/./src/components/ComCustomEvent.vue","webpack://vue-cli/./src/common/CustomEvent1.vue","webpack://vue-cli/src/common/CustomEvent1.vue","webpack://vue-cli/./src/common/CustomEvent1.vue?051c","webpack://vue-cli/./src/common/CustomEvent1.vue?771b","webpack://vue-cli/src/components/ComCustomEvent.vue","webpack://vue-cli/./src/components/ComCustomEvent.vue?87ed","webpack://vue-cli/./src/components/ComCustomEvent.vue?44e4"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"page-index\":\"\"}},[_c('div',{directives:[{name:\"shadow\",rawName:\"v-shadow\",value:({ radius: 8 }),expression:\"{ radius: 8 }\"}],staticStyle:{\"margin-bottom\":\"1rem\"}},[_c('CustomEvent1Vue',{attrs:{\"parentGetChildrenData\":_vm.getChildrenData}}),_vm._v(\" 子组件数据: \"+_vm._s(_vm.childrenData)+\" \")],1),_c('div',{directives:[{name:\"shadow\",rawName:\"v-shadow\",value:({ radius: 8 }),expression:\"{ radius: 8 }\"}],staticStyle:{\"margin-bottom\":\"1rem\"}},[_c('CustomEvent1Vue',{attrs:{\"show\":false},on:{\"transmitData\":_vm.transmitData}}),_vm._v(\" 子组件数据: \"+_vm._s(_vm.smitData)+\" \")],1),_c('div',{directives:[{name:\"shadow\",rawName:\"v-shadow\",value:({ radius: 8 }),expression:\"{ radius: 8 }\"}]},[_c('CustomEvent1Vue',{ref:\"childComponent\",attrs:{\"show\":false}}),_vm._v(\" 子组件数据: \"+_vm._s(_vm.smitData)+\" \"),_c('button',{attrs:{\"type\":\"button\"},on:{\"click\":_vm.getRef}},[_vm._v(\" 获取 \")])],1),_c('div',{directives:[{name:\"card\",rawName:\"v-card\",value:(550),expression:\"550\"}]},[_c('p',[_vm._v(\"父组件如何获取子组件中的数据呢?\")]),_vm._m(0)])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',[_c('pre',[_vm._v(\"例1:\\n  通过props属性, 将一个方法传给子组件, 子组件接收后调用此函数并传递参数\\n  父组件->\\n  <div>\\n    <ChildComponent :parentGetChildrenData=\\\"getChildrenData\\\" />\\n    子组件数据: {childrenData}\\n  <div/>\\n  export default {\\n    data() {\\n        return {\\n            childrenData: null\\n        }\\n    },\\n    methods: {\\n        getChildrenData(value) {\\n            this.childrenData = value;\\n        }\\n    }\\n  }\\n  子组件->\\n  <button @click=\\\"parentGetChildrenData(name)\\\"/>\\n  export default {\\n    props: ['parentGetChildrenData'],\\n    data() {\\n        return {\\n            name: '小舞'\\n        }\\n    }\\n  }\\n例2:\\n  通过$emit函数\\n  父组件->\\n  <div>\\n    <ChildComponent @transmitData=\\\"transmitData\\\" />\\n    子组件数据: {smitData}\\n  <div/>\\n  export default {\\n    data() {\\n        return {\\n            smitData: null\\n        }\\n    },\\n    methods: {\\n        transmitData(value) {\\n            this.smitData = value;\\n        }\\n    }\\n  }\\n  子组件->\\n  <button @click=\\\"sendData\\\"/>\\n  export default {\\n    data() {\\n        return {\\n            name: '小舞'\\n        }\\n    },\\n    methods: {\\n        sendData() {\\n            /**\\n             * $emit函数接受两个参数\\n             * param1: 调用的函数名称(与父组件@所绑定的事件名一致)\\n             * param2: 传递的数据\\n             */\\n            this.$emit('transmitData', this.name)\\n        }\\n    }\\n  }\\n例3:\\n  使用ref属性\\n  父组件->\\n  <div>\\n    <ChildComponent ref=\\\"childComponent\\\" />\\n    子组件数据: {smitData}\\n  <div/>\\n  export default {\\n    data() {\\n        return {\\n            smitData: null\\n        }\\n    },\\n    methods: {\\n        transmitData(value) {\\n            this.smitData = value;\\n        }\\n    },\\n    mounted() {\\n        // 当ref标识的组件(子)触发transmitData函数时回调此组件(父)transmitData函数\\n        this.$refs.childComponent.$on('transmitData', this.transmitData)\\n    }\\n  }\\n  子组件->\\n  <button @click=\\\"sendData\\\"/>\\n  export default {\\n    data() {\\n        return {\\n            name: '小舞'\\n        }\\n    },\\n    methods: {\\n        sendData() {\\n            this.$emit('transmitData', this.name)\\n        }\\n    }\\n  }\\n例4:\\n  既然通过ref拿到了组件的实例, 为什么不直接获取子组件的值呢😎\\n  父组件->\\n  export default() {\\n    methods: {\\n        getChildrenData() {\\n            this.$refs.childComponent.name\\n        }\\n    }\\n  }\\n扩:\\n  $on方式灵活性更高, 可以做延迟操作, 仅触发一次操作等\\n  ...\\n  mounted() {\\n    setTimeout(()=>{\\n        this.$refs.childComponent.$on('transmitData', this.transmitData)\\n    }, 3000)\\n  }\\n  ...\\n  限定触发单次:\\n    this.$refs.childComponent.$once('transmitData', this.transmitData)\\n    or\\n    在绑定事件时/@后使用once修饰符\\n                \")])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_vm._v(\" 我是子组件-\"+_vm._s(Date.now())+\" \"),_c('p',[(_vm.show != 'all' ? _vm.show : false)?_c('button',{attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.parentGetChildrenData(_vm.name)}}},[_vm._v(\" 获取子组件数据 \")]):_vm._e(),(_vm.show != 'all' ? !_vm.show : false)?_c('button',{attrs:{\"type\":\"button\"},on:{\"click\":_vm.sendData}},[_vm._v(\" 获取子组件数据($emit方式) \")]):_vm._e()])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        我是子组件-{{ Date.now() }}\r\n        <p>\r\n            <button\r\n                type=\"button\"\r\n                v-if=\"show != 'all' ? show : false\"\r\n                @click=\"parentGetChildrenData(name)\">\r\n                获取子组件数据\r\n            </button>\r\n            <button\r\n                type=\"button\"\r\n                v-if=\"show != 'all' ? !show : false\"\r\n                @click=\"sendData\">\r\n                获取子组件数据($emit方式)\r\n            </button>\r\n        </p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'CustomEvent1',\r\n    props: {\r\n        parentGetChildrenData: Function,\r\n        show: {\r\n            default: true,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            name: '小舞',\r\n        };\r\n    },\r\n    methods: {\r\n        sendData() {\r\n            this.$emit('transmitData', this.name);\r\n        },\r\n        sendDataForRef() {\r\n            return this.name;\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CustomEvent1.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CustomEvent1.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CustomEvent1.vue?vue&type=template&id=481eba84&scoped=true&\"\nimport script from \"./CustomEvent1.vue?vue&type=script&lang=js&\"\nexport * from \"./CustomEvent1.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"481eba84\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div page-index>\r\n        <div\r\n            v-shadow=\"{ radius: 8 }\"\r\n            style=\"margin-bottom: 1rem\">\r\n            <CustomEvent1Vue :parentGetChildrenData=\"getChildrenData\" />\r\n            子组件数据: {{ childrenData }}\r\n        </div>\r\n        <div\r\n            v-shadow=\"{ radius: 8 }\"\r\n            style=\"margin-bottom: 1rem\">\r\n            <CustomEvent1Vue\r\n                :show=\"false\"\r\n                @transmitData=\"transmitData\" />\r\n            子组件数据: {{ smitData }}\r\n        </div>\r\n        <div v-shadow=\"{ radius: 8 }\">\r\n            <CustomEvent1Vue\r\n                :show=\"false\"\r\n                ref=\"childComponent\" />\r\n            子组件数据: {{ smitData }}\r\n            <button\r\n                type=\"button\"\r\n                @click=\"getRef\">\r\n                获取\r\n            </button>\r\n        </div>\r\n        <div v-card=\"550\">\r\n            <p>父组件如何获取子组件中的数据呢?</p>\r\n            <div>\r\n                <pre>\r\n例1:\r\n  通过props属性, 将一个方法传给子组件, 子组件接收后调用此函数并传递参数\r\n  父组件->\r\n  &lt;div&gt;\r\n    &lt;ChildComponent :parentGetChildrenData=\"getChildrenData\" /&gt;\r\n    子组件数据: {childrenData}\r\n  &lt;div/&gt;\r\n  export default {\r\n    data() {\r\n        return {\r\n            childrenData: null\r\n        }\r\n    },\r\n    methods: {\r\n        getChildrenData(value) {\r\n            this.childrenData = value;\r\n        }\r\n    }\r\n  }\r\n  子组件->\r\n  &lt;button @click=\"parentGetChildrenData(name)\"/&gt;\r\n  export default {\r\n    props: ['parentGetChildrenData'],\r\n    data() {\r\n        return {\r\n            name: '小舞'\r\n        }\r\n    }\r\n  }\r\n例2:\r\n  通过$emit函数\r\n  父组件->\r\n  &lt;div&gt;\r\n    &lt;ChildComponent @transmitData=\"transmitData\" /&gt;\r\n    子组件数据: {smitData}\r\n  &lt;div/&gt;\r\n  export default {\r\n    data() {\r\n        return {\r\n            smitData: null\r\n        }\r\n    },\r\n    methods: {\r\n        transmitData(value) {\r\n            this.smitData = value;\r\n        }\r\n    }\r\n  }\r\n  子组件->\r\n  &lt;button @click=\"sendData\"/&gt;\r\n  export default {\r\n    data() {\r\n        return {\r\n            name: '小舞'\r\n        }\r\n    },\r\n    methods: {\r\n        sendData() {\r\n            /**\r\n             * $emit函数接受两个参数\r\n             * param1: 调用的函数名称(与父组件@所绑定的事件名一致)\r\n             * param2: 传递的数据\r\n             */\r\n            this.$emit('transmitData', this.name)\r\n        }\r\n    }\r\n  }\r\n例3:\r\n  使用ref属性\r\n  父组件->\r\n  &lt;div&gt;\r\n    &lt;ChildComponent ref=\"childComponent\" /&gt;\r\n    子组件数据: {smitData}\r\n  &lt;div/&gt;\r\n  export default {\r\n    data() {\r\n        return {\r\n            smitData: null\r\n        }\r\n    },\r\n    methods: {\r\n        transmitData(value) {\r\n            this.smitData = value;\r\n        }\r\n    },\r\n    mounted() {\r\n        // 当ref标识的组件(子)触发transmitData函数时回调此组件(父)transmitData函数\r\n        this.$refs.childComponent.$on('transmitData', this.transmitData)\r\n    }\r\n  }\r\n  子组件->\r\n  &lt;button @click=\"sendData\"/&gt;\r\n  export default {\r\n    data() {\r\n        return {\r\n            name: '小舞'\r\n        }\r\n    },\r\n    methods: {\r\n        sendData() {\r\n            this.$emit('transmitData', this.name)\r\n        }\r\n    }\r\n  }\r\n例4:\r\n  既然通过ref拿到了组件的实例, 为什么不直接获取子组件的值呢😎\r\n  父组件->\r\n  export default() {\r\n    methods: {\r\n        getChildrenData() {\r\n            this.$refs.childComponent.name\r\n        }\r\n    }\r\n  }\r\n扩:\r\n  $on方式灵活性更高, 可以做延迟操作, 仅触发一次操作等\r\n  ...\r\n  mounted() {\r\n    setTimeout(()=>{\r\n        this.$refs.childComponent.$on('transmitData', this.transmitData)\r\n    }, 3000)\r\n  }\r\n  ...\r\n  限定触发单次:\r\n    this.$refs.childComponent.$once('transmitData', this.transmitData)\r\n    or\r\n    在绑定事件时/@后使用once修饰符\r\n                </pre>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport CustomEvent1Vue from '@/common/CustomEvent1.vue';\r\n\r\nexport default {\r\n    name: 'ComponentCustomEvent',\r\n    components: { CustomEvent1Vue },\r\n    data() {\r\n        return {\r\n            childrenData: null,\r\n            smitData: null,\r\n        };\r\n    },\r\n    methods: {\r\n        getChildrenData(value) {\r\n            this.childrenData = value;\r\n        },\r\n        transmitData(value) {\r\n            this.smitData = value;\r\n        },\r\n        getRef() {\r\n            this.$refs.childComponent.$on('transmitData', this.transmitData);\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ComCustomEvent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ComCustomEvent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ComCustomEvent.vue?vue&type=template&id=0bd888bf&scoped=true&\"\nimport script from \"./ComCustomEvent.vue?vue&type=script&lang=js&\"\nexport * from \"./ComCustomEvent.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0bd888bf\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","directives","name","rawName","value","radius","expression","staticStyle","getChildrenData","_v","_s","childrenData","on","transmitData","smitData","ref","getRef","_m","staticRenderFns","Date","now","show","$event","parentGetChildrenData","_e","sendData","props","default","data","methods","sendDataForRef","component","components","CustomEvent1Vue"],"sourceRoot":""}