{"version":3,"file":"static/js/829.2aaa9bbe.js","mappings":"0JAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,MAAM,CAAC,aAAa,KAAK,CAACF,EAAG,MAAM,CAACG,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAO,IAAKC,WAAW,SAAS,CAACP,EAAG,IAAI,CAACF,EAAIU,GAAG,aAAaV,EAAIW,GAAG,KAAKT,EAAG,MAAM,CAACA,EAAG,IAAI,CAACA,EAAG,SAAS,CAACE,MAAM,CAAC,KAAO,UAAUQ,GAAG,CAAC,MAAQZ,EAAIa,UAAU,CAACb,EAAIU,GAAG,wBAC7T,EACII,EAAkB,CAAC,WAAY,IAAId,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,MAAM,CAACF,EAAIU,GAAG,+1BAClG,GCHA,GACIK,QAAS,CACLF,UACIG,MAAM,UACV,IC2DR,GACAV,KAAAA,QACAW,OACA,QACA,EACAC,OAAAA,CAAAA,ICpEqP,I,UCOjPC,GAAY,OACd,EACApB,EACAe,GACA,EACA,KACA,WACA,MAIF,EAAeK,EAAiB,O","sources":["webpack://vue-cli/./src/components/Mixin.vue","webpack://vue-cli/./src/mixin/index.js","webpack://vue-cli/src/components/Mixin.vue","webpack://vue-cli/./src/components/Mixin.vue?09cc","webpack://vue-cli/./src/components/Mixin.vue?6d02"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"page-index\":\"\"}},[_c('div',{directives:[{name:\"card\",rawName:\"v-card\",value:(750),expression:\"750\"}]},[_c('p',[_vm._v(\"关于mixin\")]),_vm._m(0)]),_c('div',[_c('p',[_c('button',{attrs:{\"type\":\"button\"},on:{\"click\":_vm.message}},[_vm._v(\" 调用mixin里的方法 \")])])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',[_c('pre',[_vm._v(\"提取组件的相同部分(代码)到一个js里实现复用\\n例:\\n  mixin.js->\\n  export default {\\n    methods: {\\n        message() {\\n            alert('Message')\\n        }\\n    }\\n  }\\n  Mixin.vue->\\n  <template>\\n  <div>\\n    <!-- 组件内部并没有声明message方法, 调用的是mixin.js里声明的函数 -->\\n    <button type=\\\"button\\\" @click=\\\"message\\\"/>\\n  </div>\\n  </template>\\n\\n  <script>\\n  import mixin from '../mixin/index.js'\\n\\n  export default {\\n    name: 'Mixin',\\n    mixins: [mixin]\\n  }\\n  </script>\\n杠:\\n  q: mixin里可以写什么呢?\\n  a: 正常vue里的配置项在混入里都可以配置, 如: methods, mounted...\\n  q: 如果mixin里的配置和组件中的配置重复了怎么办?\\n  a: 分情况\\n     情况一: 若组件和混入都配置了data属性(函数), 并且含有相同的属性, 以组件为主混入为辅(混入会将数据整合)\\n     情况二: 生命周期钩子来讲, 组件和混入里声明的钩子都会生效, 但会以混入为主(优先级高于组件内部声明的钩子)\\n  q: 如何全局引入呢?\\n  a: 在入口js文件中引入mixin并使用\\n     app.js->\\n     import mixin from './mixin'\\n     Vue.mixin(mixin)\\n  a: 这样你就能在任何组件中使用混入啦!\\n                \")])])\n}]\n\nexport { render, staticRenderFns }","export default {\r\n    methods: {\r\n        message() {\r\n            alert('Message');\r\n        },\r\n    },\r\n};\r\n","<template>\r\n    <div page-index>\r\n        <div v-card=\"750\">\r\n            <p>关于mixin</p>\r\n            <div>\r\n                <pre>\r\n提取组件的相同部分(代码)到一个js里实现复用\r\n例:\r\n  mixin.js->\r\n  export default {\r\n    methods: {\r\n        message() {\r\n            alert('Message')\r\n        }\r\n    }\r\n  }\r\n  Mixin.vue->\r\n  &lt;template&gt;\r\n  &lt;div&gt;\r\n    &lt;&#33;-- 组件内部并没有声明message方法, 调用的是mixin.js里声明的函数 --&gt;\r\n    &lt;button type=\"button\" @click=\"message\"/&gt;\r\n  &lt;/div&gt;\r\n  &lt;/template&gt;\r\n\r\n  &lt;script&gt;\r\n  import mixin from '../mixin/index.js'\r\n\r\n  export default {\r\n    name: 'Mixin',\r\n    mixins: [mixin]\r\n  }\r\n  &lt;/script&gt;\r\n杠:\r\n  q: mixin里可以写什么呢?\r\n  a: 正常vue里的配置项在混入里都可以配置, 如: methods, mounted...\r\n  q: 如果mixin里的配置和组件中的配置重复了怎么办?\r\n  a: 分情况\r\n     情况一: 若组件和混入都配置了data属性(函数), 并且含有相同的属性, 以组件为主混入为辅(混入会将数据整合)\r\n     情况二: 生命周期钩子来讲, 组件和混入里声明的钩子都会生效, 但会以混入为主(优先级高于组件内部声明的钩子)\r\n  q: 如何全局引入呢?\r\n  a: 在入口js文件中引入mixin并使用\r\n     app.js->\r\n     import mixin from './mixin'\r\n     Vue.mixin(mixin)\r\n  a: 这样你就能在任何组件中使用混入啦!\r\n                </pre>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <p>\r\n                <button\r\n                    type=\"button\"\r\n                    @click=\"message\">\r\n                    调用mixin里的方法\r\n                </button>\r\n            </p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport mixin from '../mixin/index';\r\n\r\nexport default {\r\n    name: 'Mixin',\r\n    data() {\r\n        return {};\r\n    },\r\n    mixins: [mixin],\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Mixin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Mixin.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Mixin.vue?vue&type=template&id=852aa28e&scoped=true&\"\nimport script from \"./Mixin.vue?vue&type=script&lang=js&\"\nexport * from \"./Mixin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"852aa28e\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","directives","name","rawName","value","expression","_v","_m","on","message","staticRenderFns","methods","alert","data","mixins","component"],"sourceRoot":""}