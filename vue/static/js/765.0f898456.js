"use strict";(self["webpackChunkvue_cli"]=self["webpackChunkvue_cli"]||[]).push([[765],{6765:function(t,n,e){e.r(n),e.d(n,{default:function(){return p}});var a=function(){var t=this,n=t._self._c;return n("div",{attrs:{"page-index":""}},[n("div",[n("CustomEvent2Vue",{on:{changeChildData:t.changeChildData}}),n("p",[t._v("子组件数据: [控制台查看效果]")])],1),n("div",{directives:[{name:"card",rawName:"v-card"}]},[n("p",[t._v("解绑事件")]),t._m(0)])])},o=[function(){var t=this,n=t._self._c;return n("div",[n("pre",[t._v("使用$off解除绑定的事件\n例: this.$off('event')\n杠:\n  q: 能不能一次性解绑多个事件呢?\n  a: 可以, 给$off传递一个数组即可\n  a: this.$off(['event1', 'event2'])\n  q: 这样写太麻烦, 如果我要解除所有的事件岂不是要一个个写事件名称?\n  a: 就你事多😒, 别给$off传递参数不就行了\n  a: this.$off()\n  q: 好暴力! 我好喜欢!😍\n  a: 还有更暴力的, 组件销毁也可以解绑事件\n  a: this.$destory()\n                ")])])}],u=function(){var t=this,n=t._self._c;return n("div",[t._v(" 我是子组件 "),n("p",[n("button",{attrs:{type:"button"},on:{click:function(n){return t.$emit("changeChildData",t.num)}}},[t._v(" 操作子组件数据 ")])]),n("p",[n("button",{attrs:{type:"button"},on:{click:function(n){return t.$off("changeChildData")}}},[t._v(" 解绑事件[$off('event')] ")])]),n("p",[n("button",{attrs:{type:"button"},on:{click:function(n){return t.$off(["changeChildData"])}}},[t._v(" 解绑多个事件[$off(['event1', 'event2'])] ")])]),n("p",[n("button",{attrs:{type:"button"},on:{click:function(n){return t.$off()}}},[t._v(" 解绑所有事件[$off()] ")])]),n("p",[n("button",{attrs:{type:"button"},on:{click:function(n){return t.$destroy()}}},[t._v(" 自毁 ")])])])},i=[],r={name:"CustomEvent2",data(){return{num:1}}},f=r,c=e(1001),s=(0,c.Z)(f,u,i,!1,null,"6e4be7bb",null),l=s.exports,v={name:"ComCustomUnbidEvent",components:{CustomEvent2Vue:l},data(){return{childData:null}},methods:{changeChildData(t){this.childData=t,console.log(t)}}},d=v,h=(0,c.Z)(d,a,o,!1,null,"6eafd4f8",null),p=h.exports}}]);
//# sourceMappingURL=765.0f898456.js.map