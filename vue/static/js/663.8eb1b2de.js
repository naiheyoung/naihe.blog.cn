"use strict";(self["webpackChunkvue_cli"]=self["webpackChunkvue_cli"]||[]).push([[663],{9663:function(n,e,t){t.r(e),t.d(e,{default:function(){return f}});var r=function(){var n=this,e=n._self._c;return e("div",{attrs:{"page-index":""}},[e("CustomVue",{attrs:{name:"小舞"}}),e("CustomVue",{attrs:{name:"荣荣"}}),e("CustomVue"),e("hr"),e("div",{directives:[{name:"card",rawName:"v-card"}]},[e("p",[n._v("关于props属性")]),n._m(0)])],1)},a=[function(){var n=this,e=n._self._c;return e("div",[e("pre",[n._v("props本质是组件之间传递数据问题\n使用时在需要传递数据的组件上写对应的属性, 并且在接收数据组件内部使用props属性接收即可\n例:\n  <Custom name=\"小舞\"/>\n  Custom.vue内部\n  export default {\n    props: ['name']\n  }\n以上是默认传递方式\n传递Number类型数据方式\n例1:\n  <Custom :num=\"18\"/>\n  只需在属性前加上[:], 让其作为表达式传递\n例2:\n  <Custom :num=\"18\"/>\n  Custom.vue组件内部\n  export default {\n    props: {\n        num: Number\n    }\n  }\n  在接收组件内部props属性中定义数据的类型\n  此方式可以预防组件传递数据时[:]忘记携带的情况\n深度写法:\n例:\n  Custom.vue组件内部\n  export default {\n    props: {\n        name: {\n            // 类型\n            type: String,\n            // 必填项\n            required: true,\n            // 默认值\n            default: '小舞'\n        }\n    }\n  }\n注1:\n  不建议修改props属性接收到的数据\n  数据可以被修改, 但会有警告\n  Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders.\n杠:\n  q: 我就想改 你就说能不能行😡\n  a: 当然, 可以通过替身术的方式进行修改😎\n  q: 啥替身术啊, 能不能说人话!\n  a: 话术都听不懂, 还学人杠精😒就是复制props的值到data里面, 修改时修改data中的值即可\n  a: 看好了, 我只展示一次\n  Custom.vue组件内部\n\n  <template>\n    \x3c!-- 显示时只显示内部定义的变量 --\x3e\n    {tempName}\n  <template/>\n\n  export default {\n    props: ['name'],\n    data() {\n        return {\n            // 使用一个变量接收传递的参数\n            tempName: this.name\n        }\n    },\n    methods: {\n        changeName() {\n            // 修改时, 只修改内部定义的值即可\n            this.tempName = '修改的值'\n        }\n    }\n  }\n注2:\n  若组件内部已经定义了和传递属性名字一样的属性, 以props接收到的值为准\n注3: 传递的属性名称不能和Vue内部属性重复 如: key, ref\n                ")])])}],u=function(){var n=this,e=n._self._c;return e("div",{style:{color:n.color}},[e("p",[n._v(n._s(n.message))]),e("p",[n._v(" 组件传递数据: "),e("span",{staticStyle:{"text-decoration":"underline #f3a694"}},[n._v(n._s(n.name))])]),e("p",[e("button",{attrs:{type:"button"},on:{click:n.changeName}},[n._v(" 尝试修改接收到的数据 ")])])])},s=[],o={name:"Custom",props:{name:{default:"未传递"},color:{default:"unset"}},data(){return{message:"我是Custom组件",number:18}},methods:{changeName(){this.name="修改后的值"}}},p=o,m=t(1001),l=(0,m.Z)(p,u,s,!1,null,"5f7cbe67",null),c=l.exports,i={name:"Props",components:{CustomVue:c},data(){return{}}},d=i,v=(0,m.Z)(d,r,a,!1,null,"c2118ce6",null),f=v.exports}}]);
//# sourceMappingURL=663.8eb1b2de.js.map